Problem Statement
    
You are given a String spell containing an ancient magic spell. The spell is encrypted, but the 
cypher is quite simple. To decrypt the spell, you need to find all occurrences of the letters 
'A' and 'Z', and then reverse their order. For example, if the encrypted spell is "AABZCADZA", 
you would first find all the 'A's and 'Z's: "AA_Z_A_ZA". You would then reverse their order: 
"AZ_A_Z_AA". The final decrypted spell is "AZBACZDAA". Return the decrypted version of the 
given spell.

Definition
    
Class:
	MagicSpell
Method:
	fixTheSpell
Parameters:
	String
Returns:
	String
Method signature:
	String fixTheSpell(String spell)
	(be sure your method is public)
Limits
    
Time limit (s):
	2.000
Memory limit (MB):
	64

Constraints - spell will contain between 1 and 50 uppercase letters ('A'-'Z'), inclusive. 

Examples
0)
"AZ"
Returns: "ZA"
This spell contains only letters 'A' and 'Z', so we just need to reverse it.

1)
"ABACADA"
Returns: "ABACADA"
This spell remains the same after decryption.

2)
"AABZCADZA"
Returns: "AZBACZDAA"
The example from the problem statement.

3)
"AZBASGHNAZAHBNVZZGGGAGGZAZ"
Returns: "ZABZSGHNAZZHBNVAZGGGAGGAZA"

This problem statement is the exclusive and proprietary property of TopCoder, Inc. Any 
unauthorized use or reproduction of this information without the prior written consent of 
TopCoder, Inc. is strictly prohibited. (c)2003, TopCoder, Inc. All rights reserved.